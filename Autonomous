package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.util.ElapsedTime;


/**
 * Created by Kay on 10/26/16.
 */

public class AutonomousMode {

    @Autonomous(name = "AutonomousOP", group="Iterative Opmode")
    @Disabled
    public class OpMode_Iterative extends OpMode
    {
        /* Declare OpMode members. */
        private ElapsedTime runtime = new ElapsedTime();

        private DcMotor leftMotor = null;
        private DcMotor rightMotor = null;

        /*
         * Code to run ONCE when the driver hits INIT
         */
        @Override
        public void init() {
            telemetry.addData("Status", "Initialized");

        /* Initialize the hardware variables.
         * Make sure names correspond with names on app
         */
            leftMotor  = hardwareMap.dcMotor.get("left motor");
            rightMotor = hardwareMap.dcMotor.get("right motor");



            // eg: Set the drive motor directions:
            // Reverse the motor that runs backwards when connected directly to the battery
            leftMotor.setDirection(DcMotor.Direction.FORWARD); // Set to REVERSE if using AndyMark motors
            rightMotor.setDirection(DcMotor.Direction.REVERSE);// Set to FORWARD if using AndyMark motors
            telemetry.addData("Status", "Initialized");
        }

        /*
         * Code to run REPEATEDLY after the driver hits INIT, but before they hit PLAY
         */
        @Override
        public void init_loop() {
        }

        /*
         * Code to run ONCE when the driver hits PLAY
         */
        @Override
        public void start() {
            runtime.reset();
        }

        /*
         * Code to run REPEATEDLY after the driver hits PLAY but before they hit STOP
         */
        @Override
        public void loop() {
            telemetry.addData("Status", "Running: " + runtime.toString());

            // eg: Run wheels in tank mode (note: The joystick goes negative when pushed forwards)
            leftMotor.setPower(-gamepad1.left_stick_y);
            rightMotor.setPower(-gamepad1.right_stick_y);
        }

        /*
         * Code to run ONCE after the driver hits STOP
         * Probably reset things, like beacon-pusher and thrower
         */
        @Override
        public void stop() {
        }

    }

}
